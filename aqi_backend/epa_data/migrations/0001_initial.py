# Generated by Django 2.0.5 on 2018-05-09 21:37

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AtmosphericPressureHourly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='State code')),
                ('county_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='County code')),
                ('site_num', models.CharField(blank=True, max_length=4, null=True, verbose_name='Site number')),
                ('parameter_code', models.CharField(blank=True, max_length=5, null=True, verbose_name='Parameter code')),
                ('poc', models.SmallIntegerField(blank=True, null=True, verbose_name='POC')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('datum', models.CharField(blank=True, max_length=8, null=True, verbose_name='Datum')),
                ('parameter_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Parameter Name')),
                ('date_local', models.DateField(blank=True, null=True, verbose_name='Local date')),
                ('time_local', models.TimeField(blank=True, null=True, verbose_name='Local time')),
                ('date_gmt', models.DateField(blank=True, null=True, verbose_name='GMT date')),
                ('time_gmt', models.TimeField(blank=True, null=True, verbose_name='GMT time')),
                ('sample_measurement', models.FloatField(blank=True, null=True, verbose_name='Sample measurement')),
                ('units_of_measure', models.CharField(blank=True, max_length=64, null=True, verbose_name='Units of measurement')),
                ('mdl', models.FloatField(blank=True, null=True, verbose_name='MDL')),
                ('unceirtanty', models.CharField(blank=True, max_length=32, null=True, verbose_name='Unceirtanty')),
                ('qualifier', models.CharField(blank=True, max_length=32, null=True, verbose_name='Qualifier')),
                ('method_type', models.CharField(blank=True, max_length=32, null=True, verbose_name='Method type')),
                ('method_code', models.CharField(blank=True, max_length=32, null=True, verbose_name='Method code')),
                ('method_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Method name')),
                ('state_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='State name')),
                ('county_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='County name')),
                ('date_of_last_change', models.DateField(blank=True, null=True, verbose_name='Date of last change')),
            ],
            options={
                'verbose_name': 'Atmospheric Pressure Hourly Measurement',
                'verbose_name_plural': 'Atmospheric Pressure Hourly Measurements',
                'db_table': 'atm_perssure_hourly',
            },
        ),
        migrations.CreateModel(
            name='COHourly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='State code')),
                ('county_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='County code')),
                ('site_num', models.CharField(blank=True, max_length=4, null=True, verbose_name='Site number')),
                ('parameter_code', models.CharField(blank=True, max_length=5, null=True, verbose_name='Parameter code')),
                ('poc', models.SmallIntegerField(blank=True, null=True, verbose_name='POC')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('datum', models.CharField(blank=True, max_length=8, null=True, verbose_name='Datum')),
                ('parameter_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Parameter Name')),
                ('date_local', models.DateField(blank=True, null=True, verbose_name='Local date')),
                ('time_local', models.TimeField(blank=True, null=True, verbose_name='Local time')),
                ('date_gmt', models.DateField(blank=True, null=True, verbose_name='GMT date')),
                ('time_gmt', models.TimeField(blank=True, null=True, verbose_name='GMT time')),
                ('sample_measurement', models.FloatField(blank=True, null=True, verbose_name='Sample measurement')),
                ('units_of_measure', models.CharField(blank=True, max_length=64, null=True, verbose_name='Units of measurement')),
                ('mdl', models.FloatField(blank=True, null=True, verbose_name='MDL')),
                ('unceirtanty', models.CharField(blank=True, max_length=32, null=True, verbose_name='Unceirtanty')),
                ('qualifier', models.CharField(blank=True, max_length=32, null=True, verbose_name='Qualifier')),
                ('method_type', models.CharField(blank=True, max_length=32, null=True, verbose_name='Method type')),
                ('method_code', models.CharField(blank=True, max_length=32, null=True, verbose_name='Method code')),
                ('method_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Method name')),
                ('state_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='State name')),
                ('county_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='County name')),
                ('date_of_last_change', models.DateField(blank=True, null=True, verbose_name='Date of last change')),
            ],
            options={
                'verbose_name': 'CO2 Hourly Measurement',
                'verbose_name_plural': 'CO2 Hourly Measurements',
                'db_table': 'co2_hourly',
            },
        ),
        migrations.CreateModel(
            name='HumidityHourly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='State code')),
                ('county_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='County code')),
                ('site_num', models.CharField(blank=True, max_length=4, null=True, verbose_name='Site number')),
                ('parameter_code', models.CharField(blank=True, max_length=5, null=True, verbose_name='Parameter code')),
                ('poc', models.SmallIntegerField(blank=True, null=True, verbose_name='POC')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('datum', models.CharField(blank=True, max_length=8, null=True, verbose_name='Datum')),
                ('parameter_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Parameter Name')),
                ('date_local', models.DateField(blank=True, null=True, verbose_name='Local date')),
                ('time_local', models.TimeField(blank=True, null=True, verbose_name='Local time')),
                ('date_gmt', models.DateField(blank=True, null=True, verbose_name='GMT date')),
                ('time_gmt', models.TimeField(blank=True, null=True, verbose_name='GMT time')),
                ('sample_measurement', models.FloatField(blank=True, null=True, verbose_name='Sample measurement')),
                ('units_of_measure', models.CharField(blank=True, max_length=64, null=True, verbose_name='Units of measurement')),
                ('mdl', models.FloatField(blank=True, null=True, verbose_name='MDL')),
                ('unceirtanty', models.CharField(blank=True, max_length=32, null=True, verbose_name='Unceirtanty')),
                ('qualifier', models.CharField(blank=True, max_length=32, null=True, verbose_name='Qualifier')),
                ('method_type', models.CharField(blank=True, max_length=32, null=True, verbose_name='Method type')),
                ('method_code', models.CharField(blank=True, max_length=32, null=True, verbose_name='Method code')),
                ('method_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Method name')),
                ('state_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='State name')),
                ('county_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='County name')),
                ('date_of_last_change', models.DateField(blank=True, null=True, verbose_name='Date of last change')),
            ],
            options={
                'verbose_name': 'Humidity Hourly Measurement',
                'verbose_name_plural': 'Humidity Hourly Measurements',
                'db_table': 'humidity_hourly',
            },
        ),
        migrations.CreateModel(
            name='NO2Hourly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='State code')),
                ('county_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='County code')),
                ('site_num', models.CharField(blank=True, max_length=4, null=True, verbose_name='Site number')),
                ('parameter_code', models.CharField(blank=True, max_length=5, null=True, verbose_name='Parameter code')),
                ('poc', models.SmallIntegerField(blank=True, null=True, verbose_name='POC')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('datum', models.CharField(blank=True, max_length=8, null=True, verbose_name='Datum')),
                ('parameter_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Parameter Name')),
                ('date_local', models.DateField(blank=True, null=True, verbose_name='Local date')),
                ('time_local', models.TimeField(blank=True, null=True, verbose_name='Local time')),
                ('date_gmt', models.DateField(blank=True, null=True, verbose_name='GMT date')),
                ('time_gmt', models.TimeField(blank=True, null=True, verbose_name='GMT time')),
                ('sample_measurement', models.FloatField(blank=True, null=True, verbose_name='Sample measurement')),
                ('units_of_measure', models.CharField(blank=True, max_length=64, null=True, verbose_name='Units of measurement')),
                ('mdl', models.FloatField(blank=True, null=True, verbose_name='MDL')),
                ('unceirtanty', models.CharField(blank=True, max_length=32, null=True, verbose_name='Unceirtanty')),
                ('qualifier', models.CharField(blank=True, max_length=32, null=True, verbose_name='Qualifier')),
                ('method_type', models.CharField(blank=True, max_length=32, null=True, verbose_name='Method type')),
                ('method_code', models.CharField(blank=True, max_length=32, null=True, verbose_name='Method code')),
                ('method_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Method name')),
                ('state_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='State name')),
                ('county_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='County name')),
                ('date_of_last_change', models.DateField(blank=True, null=True, verbose_name='Date of last change')),
            ],
            options={
                'verbose_name': 'NO2 Hourly Measurement',
                'verbose_name_plural': 'NO2 Hourly Measurements',
                'db_table': 'no2_hourly',
            },
        ),
        migrations.CreateModel(
            name='O3Hourly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='State code')),
                ('county_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='County code')),
                ('site_num', models.CharField(blank=True, max_length=4, null=True, verbose_name='Site number')),
                ('parameter_code', models.CharField(blank=True, max_length=5, null=True, verbose_name='Parameter code')),
                ('poc', models.SmallIntegerField(blank=True, null=True, verbose_name='POC')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('datum', models.CharField(blank=True, max_length=8, null=True, verbose_name='Datum')),
                ('parameter_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Parameter Name')),
                ('date_local', models.DateField(blank=True, null=True, verbose_name='Local date')),
                ('time_local', models.TimeField(blank=True, null=True, verbose_name='Local time')),
                ('date_gmt', models.DateField(blank=True, null=True, verbose_name='GMT date')),
                ('time_gmt', models.TimeField(blank=True, null=True, verbose_name='GMT time')),
                ('sample_measurement', models.FloatField(blank=True, null=True, verbose_name='Sample measurement')),
                ('units_of_measure', models.CharField(blank=True, max_length=64, null=True, verbose_name='Units of measurement')),
                ('mdl', models.FloatField(blank=True, null=True, verbose_name='MDL')),
                ('unceirtanty', models.CharField(blank=True, max_length=32, null=True, verbose_name='Unceirtanty')),
                ('qualifier', models.CharField(blank=True, max_length=32, null=True, verbose_name='Qualifier')),
                ('method_type', models.CharField(blank=True, max_length=32, null=True, verbose_name='Method type')),
                ('method_code', models.CharField(blank=True, max_length=32, null=True, verbose_name='Method code')),
                ('method_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Method name')),
                ('state_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='State name')),
                ('county_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='County name')),
                ('date_of_last_change', models.DateField(blank=True, null=True, verbose_name='Date of last change')),
            ],
            options={
                'verbose_name': 'O3 Hourly Measurement',
                'verbose_name_plural': 'O3 Hourly Measurements',
                'db_table': 'o3_hourly',
            },
        ),
        migrations.CreateModel(
            name='Pm10Hourly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='State code')),
                ('county_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='County code')),
                ('site_num', models.CharField(blank=True, max_length=4, null=True, verbose_name='Site number')),
                ('parameter_code', models.CharField(blank=True, max_length=5, null=True, verbose_name='Parameter code')),
                ('poc', models.SmallIntegerField(blank=True, null=True, verbose_name='POC')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('datum', models.CharField(blank=True, max_length=8, null=True, verbose_name='Datum')),
                ('parameter_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Parameter Name')),
                ('date_local', models.DateField(blank=True, null=True, verbose_name='Local date')),
                ('time_local', models.TimeField(blank=True, null=True, verbose_name='Local time')),
                ('date_gmt', models.DateField(blank=True, null=True, verbose_name='GMT date')),
                ('time_gmt', models.TimeField(blank=True, null=True, verbose_name='GMT time')),
                ('sample_measurement', models.FloatField(blank=True, null=True, verbose_name='Sample measurement')),
                ('units_of_measure', models.CharField(blank=True, max_length=64, null=True, verbose_name='Units of measurement')),
                ('mdl', models.FloatField(blank=True, null=True, verbose_name='MDL')),
                ('unceirtanty', models.CharField(blank=True, max_length=32, null=True, verbose_name='Unceirtanty')),
                ('qualifier', models.CharField(blank=True, max_length=32, null=True, verbose_name='Qualifier')),
                ('method_type', models.CharField(blank=True, max_length=32, null=True, verbose_name='Method type')),
                ('method_code', models.CharField(blank=True, max_length=32, null=True, verbose_name='Method code')),
                ('method_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Method name')),
                ('state_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='State name')),
                ('county_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='County name')),
                ('date_of_last_change', models.DateField(blank=True, null=True, verbose_name='Date of last change')),
            ],
            options={
                'verbose_name': 'PM 10 Hourly Measurement',
                'verbose_name_plural': 'PM 10 Hourly Measurements',
                'db_table': 'pm10_hourly',
            },
        ),
        migrations.CreateModel(
            name='Pm25Hourly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='State code')),
                ('county_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='County code')),
                ('site_num', models.CharField(blank=True, max_length=4, null=True, verbose_name='Site number')),
                ('parameter_code', models.CharField(blank=True, max_length=5, null=True, verbose_name='Parameter code')),
                ('poc', models.SmallIntegerField(blank=True, null=True, verbose_name='POC')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('datum', models.CharField(blank=True, max_length=8, null=True, verbose_name='Datum')),
                ('parameter_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Parameter Name')),
                ('date_local', models.DateField(blank=True, null=True, verbose_name='Local date')),
                ('time_local', models.TimeField(blank=True, null=True, verbose_name='Local time')),
                ('date_gmt', models.DateField(blank=True, null=True, verbose_name='GMT date')),
                ('time_gmt', models.TimeField(blank=True, null=True, verbose_name='GMT time')),
                ('sample_measurement', models.FloatField(blank=True, null=True, verbose_name='Sample measurement')),
                ('units_of_measure', models.CharField(blank=True, max_length=64, null=True, verbose_name='Units of measurement')),
                ('mdl', models.FloatField(blank=True, null=True, verbose_name='MDL')),
                ('unceirtanty', models.CharField(blank=True, max_length=32, null=True, verbose_name='Unceirtanty')),
                ('qualifier', models.CharField(blank=True, max_length=32, null=True, verbose_name='Qualifier')),
                ('method_type', models.CharField(blank=True, max_length=32, null=True, verbose_name='Method type')),
                ('method_code', models.CharField(blank=True, max_length=32, null=True, verbose_name='Method code')),
                ('method_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Method name')),
                ('state_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='State name')),
                ('county_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='County name')),
                ('date_of_last_change', models.DateField(blank=True, null=True, verbose_name='Date of last change')),
            ],
            options={
                'verbose_name': 'PM 2.5 Hourly Measurement',
                'verbose_name_plural': 'PM 2.5 Hourly Measurements',
                'db_table': 'pm25_hourly',
            },
        ),
        migrations.CreateModel(
            name='SO2Hourly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='State code')),
                ('county_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='County code')),
                ('site_num', models.CharField(blank=True, max_length=4, null=True, verbose_name='Site number')),
                ('parameter_code', models.CharField(blank=True, max_length=5, null=True, verbose_name='Parameter code')),
                ('poc', models.SmallIntegerField(blank=True, null=True, verbose_name='POC')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('datum', models.CharField(blank=True, max_length=8, null=True, verbose_name='Datum')),
                ('parameter_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Parameter Name')),
                ('date_local', models.DateField(blank=True, null=True, verbose_name='Local date')),
                ('time_local', models.TimeField(blank=True, null=True, verbose_name='Local time')),
                ('date_gmt', models.DateField(blank=True, null=True, verbose_name='GMT date')),
                ('time_gmt', models.TimeField(blank=True, null=True, verbose_name='GMT time')),
                ('sample_measurement', models.FloatField(blank=True, null=True, verbose_name='Sample measurement')),
                ('units_of_measure', models.CharField(blank=True, max_length=64, null=True, verbose_name='Units of measurement')),
                ('mdl', models.FloatField(blank=True, null=True, verbose_name='MDL')),
                ('unceirtanty', models.CharField(blank=True, max_length=32, null=True, verbose_name='Unceirtanty')),
                ('qualifier', models.CharField(blank=True, max_length=32, null=True, verbose_name='Qualifier')),
                ('method_type', models.CharField(blank=True, max_length=32, null=True, verbose_name='Method type')),
                ('method_code', models.CharField(blank=True, max_length=32, null=True, verbose_name='Method code')),
                ('method_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Method name')),
                ('state_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='State name')),
                ('county_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='County name')),
                ('date_of_last_change', models.DateField(blank=True, null=True, verbose_name='Date of last change')),
            ],
            options={
                'verbose_name': 'SO2 Hourly Measurement',
                'verbose_name_plural': 'SO2 Hourly Measurements',
                'db_table': 'so2_hourly',
            },
        ),
        migrations.CreateModel(
            name='TemparatureHourly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='State code')),
                ('county_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='County code')),
                ('site_num', models.CharField(blank=True, max_length=4, null=True, verbose_name='Site number')),
                ('parameter_code', models.CharField(blank=True, max_length=5, null=True, verbose_name='Parameter code')),
                ('poc', models.SmallIntegerField(blank=True, null=True, verbose_name='POC')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('datum', models.CharField(blank=True, max_length=8, null=True, verbose_name='Datum')),
                ('parameter_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Parameter Name')),
                ('date_local', models.DateField(blank=True, null=True, verbose_name='Local date')),
                ('time_local', models.TimeField(blank=True, null=True, verbose_name='Local time')),
                ('date_gmt', models.DateField(blank=True, null=True, verbose_name='GMT date')),
                ('time_gmt', models.TimeField(blank=True, null=True, verbose_name='GMT time')),
                ('sample_measurement', models.FloatField(blank=True, null=True, verbose_name='Sample measurement')),
                ('units_of_measure', models.CharField(blank=True, max_length=64, null=True, verbose_name='Units of measurement')),
                ('mdl', models.FloatField(blank=True, null=True, verbose_name='MDL')),
                ('unceirtanty', models.CharField(blank=True, max_length=32, null=True, verbose_name='Unceirtanty')),
                ('qualifier', models.CharField(blank=True, max_length=32, null=True, verbose_name='Qualifier')),
                ('method_type', models.CharField(blank=True, max_length=32, null=True, verbose_name='Method type')),
                ('method_code', models.CharField(blank=True, max_length=32, null=True, verbose_name='Method code')),
                ('method_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Method name')),
                ('state_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='State name')),
                ('county_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='County name')),
                ('date_of_last_change', models.DateField(blank=True, null=True, verbose_name='Date of last change')),
            ],
            options={
                'verbose_name': 'Temperature Hourly Measurement',
                'verbose_name_plural': 'Temperature Hourly Measurements',
                'db_table': 'temperature_hourly',
            },
        ),
        migrations.CreateModel(
            name='WindHourly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='State code')),
                ('county_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='County code')),
                ('site_num', models.CharField(blank=True, max_length=4, null=True, verbose_name='Site number')),
                ('parameter_code', models.CharField(blank=True, max_length=5, null=True, verbose_name='Parameter code')),
                ('poc', models.SmallIntegerField(blank=True, null=True, verbose_name='POC')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('datum', models.CharField(blank=True, max_length=8, null=True, verbose_name='Datum')),
                ('parameter_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Parameter Name')),
                ('date_local', models.DateField(blank=True, null=True, verbose_name='Local date')),
                ('time_local', models.TimeField(blank=True, null=True, verbose_name='Local time')),
                ('date_gmt', models.DateField(blank=True, null=True, verbose_name='GMT date')),
                ('time_gmt', models.TimeField(blank=True, null=True, verbose_name='GMT time')),
                ('sample_measurement', models.FloatField(blank=True, null=True, verbose_name='Sample measurement')),
                ('units_of_measure', models.CharField(blank=True, max_length=64, null=True, verbose_name='Units of measurement')),
                ('mdl', models.FloatField(blank=True, null=True, verbose_name='MDL')),
                ('unceirtanty', models.CharField(blank=True, max_length=32, null=True, verbose_name='Unceirtanty')),
                ('qualifier', models.CharField(blank=True, max_length=32, null=True, verbose_name='Qualifier')),
                ('method_type', models.CharField(blank=True, max_length=32, null=True, verbose_name='Method type')),
                ('method_code', models.CharField(blank=True, max_length=32, null=True, verbose_name='Method code')),
                ('method_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Method name')),
                ('state_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='State name')),
                ('county_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='County name')),
                ('date_of_last_change', models.DateField(blank=True, null=True, verbose_name='Date of last change')),
            ],
            options={
                'verbose_name': 'Wind Hourly Measurement',
                'verbose_name_plural': 'Wind Hourly Measurements',
                'db_table': 'wind_hourly',
            },
        ),
    ]
